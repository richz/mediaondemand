#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediaOnDemand
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MEDIAONDEMANDDB")]
	public partial class StorageMediaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStoredMedia(StoredMedia instance);
    partial void UpdateStoredMedia(StoredMedia instance);
    partial void DeleteStoredMedia(StoredMedia instance);
    partial void InsertMediaRating(MediaRating instance);
    partial void UpdateMediaRating(MediaRating instance);
    partial void DeleteMediaRating(MediaRating instance);
    partial void InsertUserMediaPlayList(UserMediaPlayList instance);
    partial void UpdateUserMediaPlayList(UserMediaPlayList instance);
    partial void DeleteUserMediaPlayList(UserMediaPlayList instance);
    #endregion
		
		public StorageMediaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MEDIAONDEMANDDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StorageMediaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StorageMediaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StorageMediaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StorageMediaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserAccountSetting> UserAccountSettings
		{
			get
			{
				return this.GetTable<UserAccountSetting>();
			}
		}
		
		public System.Data.Linq.Table<StoredMedia> StoredMedias
		{
			get
			{
				return this.GetTable<StoredMedia>();
			}
		}
		
		public System.Data.Linq.Table<MediaRating> MediaRatings
		{
			get
			{
				return this.GetTable<MediaRating>();
			}
		}
		
		public System.Data.Linq.Table<UserMediaPlayList> UserMediaPlayLists
		{
			get
			{
				return this.GetTable<UserMediaPlayList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccountSettings")]
	public partial class UserAccountSetting
	{
		
		private string _acctUserName;
		
		private char _acctMustChangePassword;
		
		public UserAccountSetting()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acctUserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string acctUserName
		{
			get
			{
				return this._acctUserName;
			}
			set
			{
				if ((this._acctUserName != value))
				{
					this._acctUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acctMustChangePassword", DbType="Char(1) NOT NULL")]
		public char acctMustChangePassword
		{
			get
			{
				return this._acctMustChangePassword;
			}
			set
			{
				if ((this._acctMustChangePassword != value))
				{
					this._acctMustChangePassword = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoredMedia")]
	public partial class StoredMedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _medTitle;
		
		private string _medLocation;
		
		private System.DateTime _medDateAdded;
		
		private System.Nullable<char> _medIsViewable;
		
		private string _medArtist;
		
		private string _medDescription;
		
		private int _medId;
		
		private string _medGenre;
		
		private string _medMediaType;
		
		private System.Nullable<float> _medDuration;
		
		private string _medAlbum;
		
		private string _medVideoType;
		
		private string _medFileExt;
		
		private string _medPosterImageUrl;
		
		private System.Nullable<System.DateTime> _medLastPlayedDate;
		
		private System.Nullable<int> _medRating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmedTitleChanging(string value);
    partial void OnmedTitleChanged();
    partial void OnmedLocationChanging(string value);
    partial void OnmedLocationChanged();
    partial void OnmedDateAddedChanging(System.DateTime value);
    partial void OnmedDateAddedChanged();
    partial void OnmedIsViewableChanging(System.Nullable<char> value);
    partial void OnmedIsViewableChanged();
    partial void OnmedArtistChanging(string value);
    partial void OnmedArtistChanged();
    partial void OnmedDescriptionChanging(string value);
    partial void OnmedDescriptionChanged();
    partial void OnmedIdChanging(int value);
    partial void OnmedIdChanged();
    partial void OnmedGenreChanging(string value);
    partial void OnmedGenreChanged();
    partial void OnmedMediaTypeChanging(string value);
    partial void OnmedMediaTypeChanged();
    partial void OnmedDurationChanging(System.Nullable<float> value);
    partial void OnmedDurationChanged();
    partial void OnmedAlbumChanging(string value);
    partial void OnmedAlbumChanged();
    partial void OnmedVideoTypeChanging(string value);
    partial void OnmedVideoTypeChanged();
    partial void OnmedFileExtChanging(string value);
    partial void OnmedFileExtChanged();
    partial void OnmedPosterImageUrlChanging(string value);
    partial void OnmedPosterImageUrlChanged();
    partial void OnmedLastPlayedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnmedLastPlayedDateChanged();
    partial void OnmedRatingChanging(System.Nullable<int> value);
    partial void OnmedRatingChanged();
    #endregion
		
		public StoredMedia()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medTitle", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string medTitle
		{
			get
			{
				return this._medTitle;
			}
			set
			{
				if ((this._medTitle != value))
				{
					this.OnmedTitleChanging(value);
					this.SendPropertyChanging();
					this._medTitle = value;
					this.SendPropertyChanged("medTitle");
					this.OnmedTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medLocation", DbType="VarChar(300)")]
		public string medLocation
		{
			get
			{
				return this._medLocation;
			}
			set
			{
				if ((this._medLocation != value))
				{
					this.OnmedLocationChanging(value);
					this.SendPropertyChanging();
					this._medLocation = value;
					this.SendPropertyChanged("medLocation");
					this.OnmedLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medDateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime medDateAdded
		{
			get
			{
				return this._medDateAdded;
			}
			set
			{
				if ((this._medDateAdded != value))
				{
					this.OnmedDateAddedChanging(value);
					this.SendPropertyChanging();
					this._medDateAdded = value;
					this.SendPropertyChanged("medDateAdded");
					this.OnmedDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medIsViewable", DbType="Char(1)")]
		public System.Nullable<char> medIsViewable
		{
			get
			{
				return this._medIsViewable;
			}
			set
			{
				if ((this._medIsViewable != value))
				{
					this.OnmedIsViewableChanging(value);
					this.SendPropertyChanging();
					this._medIsViewable = value;
					this.SendPropertyChanged("medIsViewable");
					this.OnmedIsViewableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medArtist", DbType="VarChar(50)")]
		public string medArtist
		{
			get
			{
				return this._medArtist;
			}
			set
			{
				if ((this._medArtist != value))
				{
					this.OnmedArtistChanging(value);
					this.SendPropertyChanging();
					this._medArtist = value;
					this.SendPropertyChanged("medArtist");
					this.OnmedArtistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medDescription", DbType="VarChar(100)")]
		public string medDescription
		{
			get
			{
				return this._medDescription;
			}
			set
			{
				if ((this._medDescription != value))
				{
					this.OnmedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._medDescription = value;
					this.SendPropertyChanged("medDescription");
					this.OnmedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int medId
		{
			get
			{
				return this._medId;
			}
			set
			{
				if ((this._medId != value))
				{
					this.OnmedIdChanging(value);
					this.SendPropertyChanging();
					this._medId = value;
					this.SendPropertyChanged("medId");
					this.OnmedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medGenre", DbType="VarChar(50)")]
		public string medGenre
		{
			get
			{
				return this._medGenre;
			}
			set
			{
				if ((this._medGenre != value))
				{
					this.OnmedGenreChanging(value);
					this.SendPropertyChanging();
					this._medGenre = value;
					this.SendPropertyChanged("medGenre");
					this.OnmedGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medMediaType", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string medMediaType
		{
			get
			{
				return this._medMediaType;
			}
			set
			{
				if ((this._medMediaType != value))
				{
					this.OnmedMediaTypeChanging(value);
					this.SendPropertyChanging();
					this._medMediaType = value;
					this.SendPropertyChanged("medMediaType");
					this.OnmedMediaTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medDuration", DbType="Real")]
		public System.Nullable<float> medDuration
		{
			get
			{
				return this._medDuration;
			}
			set
			{
				if ((this._medDuration != value))
				{
					this.OnmedDurationChanging(value);
					this.SendPropertyChanging();
					this._medDuration = value;
					this.SendPropertyChanged("medDuration");
					this.OnmedDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medAlbum", DbType="VarChar(50)")]
		public string medAlbum
		{
			get
			{
				return this._medAlbum;
			}
			set
			{
				if ((this._medAlbum != value))
				{
					this.OnmedAlbumChanging(value);
					this.SendPropertyChanging();
					this._medAlbum = value;
					this.SendPropertyChanged("medAlbum");
					this.OnmedAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medVideoType", DbType="VarChar(200)")]
		public string medVideoType
		{
			get
			{
				return this._medVideoType;
			}
			set
			{
				if ((this._medVideoType != value))
				{
					this.OnmedVideoTypeChanging(value);
					this.SendPropertyChanging();
					this._medVideoType = value;
					this.SendPropertyChanged("medVideoType");
					this.OnmedVideoTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medFileExt", DbType="VarChar(10)")]
		public string medFileExt
		{
			get
			{
				return this._medFileExt;
			}
			set
			{
				if ((this._medFileExt != value))
				{
					this.OnmedFileExtChanging(value);
					this.SendPropertyChanging();
					this._medFileExt = value;
					this.SendPropertyChanged("medFileExt");
					this.OnmedFileExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medPosterImageUrl", DbType="VarChar(300)")]
		public string medPosterImageUrl
		{
			get
			{
				return this._medPosterImageUrl;
			}
			set
			{
				if ((this._medPosterImageUrl != value))
				{
					this.OnmedPosterImageUrlChanging(value);
					this.SendPropertyChanging();
					this._medPosterImageUrl = value;
					this.SendPropertyChanged("medPosterImageUrl");
					this.OnmedPosterImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medLastPlayedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> medLastPlayedDate
		{
			get
			{
				return this._medLastPlayedDate;
			}
			set
			{
				if ((this._medLastPlayedDate != value))
				{
					this.OnmedLastPlayedDateChanging(value);
					this.SendPropertyChanging();
					this._medLastPlayedDate = value;
					this.SendPropertyChanged("medLastPlayedDate");
					this.OnmedLastPlayedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="medrating", Storage="_medRating", DbType="Int")]
		public System.Nullable<int> medRating
		{
			get
			{
				return this._medRating;
			}
			set
			{
				if ((this._medRating != value))
				{
					this.OnmedRatingChanging(value);
					this.SendPropertyChanging();
					this._medRating = value;
					this.SendPropertyChanged("medRating");
					this.OnmedRatingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MediaRatings")]
	public partial class MediaRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rtgMediaId;
		
		private string _rtgUserName;
		
		private int _rtgRating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrtgMediaIdChanging(int value);
    partial void OnrtgMediaIdChanged();
    partial void OnrtgUserNameChanging(string value);
    partial void OnrtgUserNameChanged();
    partial void OnrtgRatingChanging(int value);
    partial void OnrtgRatingChanged();
    #endregion
		
		public MediaRating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rtgMediaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rtgMediaId
		{
			get
			{
				return this._rtgMediaId;
			}
			set
			{
				if ((this._rtgMediaId != value))
				{
					this.OnrtgMediaIdChanging(value);
					this.SendPropertyChanging();
					this._rtgMediaId = value;
					this.SendPropertyChanged("rtgMediaId");
					this.OnrtgMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rtgUserName", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string rtgUserName
		{
			get
			{
				return this._rtgUserName;
			}
			set
			{
				if ((this._rtgUserName != value))
				{
					this.OnrtgUserNameChanging(value);
					this.SendPropertyChanging();
					this._rtgUserName = value;
					this.SendPropertyChanged("rtgUserName");
					this.OnrtgUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rtgRating", DbType="Int NOT NULL")]
		public int rtgRating
		{
			get
			{
				return this._rtgRating;
			}
			set
			{
				if ((this._rtgRating != value))
				{
					this.OnrtgRatingChanging(value);
					this.SendPropertyChanging();
					this._rtgRating = value;
					this.SendPropertyChanged("rtgRating");
					this.OnrtgRatingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserMediaPlayList")]
	public partial class UserMediaPlayList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _plstMediaId;
		
		private string _plstUserName;
		
		private int _plstPlaylistIndex;
		
		private string _plstMediaTitle;
		
		private string _plstMediaLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnplstMediaIdChanging(int value);
    partial void OnplstMediaIdChanged();
    partial void OnplstUserNameChanging(string value);
    partial void OnplstUserNameChanged();
    partial void OnplstPlaylistIndexChanging(int value);
    partial void OnplstPlaylistIndexChanged();
    partial void OnplstMediaTitleChanging(string value);
    partial void OnplstMediaTitleChanged();
    partial void OnplstMediaLocationChanging(string value);
    partial void OnplstMediaLocationChanged();
    #endregion
		
		public UserMediaPlayList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plstMediaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int plstMediaId
		{
			get
			{
				return this._plstMediaId;
			}
			set
			{
				if ((this._plstMediaId != value))
				{
					this.OnplstMediaIdChanging(value);
					this.SendPropertyChanging();
					this._plstMediaId = value;
					this.SendPropertyChanged("plstMediaId");
					this.OnplstMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plstUserName", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string plstUserName
		{
			get
			{
				return this._plstUserName;
			}
			set
			{
				if ((this._plstUserName != value))
				{
					this.OnplstUserNameChanging(value);
					this.SendPropertyChanging();
					this._plstUserName = value;
					this.SendPropertyChanged("plstUserName");
					this.OnplstUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plstPlaylistIndex", DbType="Int NOT NULL")]
		public int plstPlaylistIndex
		{
			get
			{
				return this._plstPlaylistIndex;
			}
			set
			{
				if ((this._plstPlaylistIndex != value))
				{
					this.OnplstPlaylistIndexChanging(value);
					this.SendPropertyChanging();
					this._plstPlaylistIndex = value;
					this.SendPropertyChanged("plstPlaylistIndex");
					this.OnplstPlaylistIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plstMediaTitle", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string plstMediaTitle
		{
			get
			{
				return this._plstMediaTitle;
			}
			set
			{
				if ((this._plstMediaTitle != value))
				{
					this.OnplstMediaTitleChanging(value);
					this.SendPropertyChanging();
					this._plstMediaTitle = value;
					this.SendPropertyChanged("plstMediaTitle");
					this.OnplstMediaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plstMediaLocation", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string plstMediaLocation
		{
			get
			{
				return this._plstMediaLocation;
			}
			set
			{
				if ((this._plstMediaLocation != value))
				{
					this.OnplstMediaLocationChanging(value);
					this.SendPropertyChanging();
					this._plstMediaLocation = value;
					this.SendPropertyChanged("plstMediaLocation");
					this.OnplstMediaLocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
